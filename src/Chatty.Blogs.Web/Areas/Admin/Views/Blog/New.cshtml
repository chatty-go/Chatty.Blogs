
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@L["Page_Title"] - Chatty Blogs</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/admin/css/app.css" />
    <link rel="stylesheet" href="~/admin/css/themify.icon.css" />
    <link href="~/plugins/ztree/css/ztreestyle/ztreestyle.css" rel="stylesheet" />
    <link href="~/plugins/ztree/css/outlook.theme.css" rel="stylesheet" />
    <link href="~/admin/plugins/cropper/cropper.css" rel="stylesheet" />
    <link href="~/plugins/aieditor/css/index.css" rel="stylesheet" />

    <style>
        html,body{
            height: 100%;
        }
        .page-header {
            background-color: #fff;
            height: 50px;
            line-height: 50px;
            padding: 0 2rem;
            border-bottom: 1px solid #efefef;
            top: 0;
            z-index: 1;
        }

        .aie-header-panel {
            
        }

        .aie-header-panel aie-header > div {
            align-items: center;
            justify-content: center;
            padding: 10px 0;
        }

        .aie-container {
            border: none !important;
        }

        .aie-container-panel {
            width: calc(100% - 2rem - 2px);
            max-width: 800px;
            margin: 1rem auto;
            border: 1px solid rgb(229 231 235);
            background-color: #fff;
            height: 100%;
            min-height: 100vh;
            padding: 1rem;
            z-index: 99;
        }

        .aie-main {
            position: relative;
            overflow-y: scroll;
        }

        .aie-directory {
            position: fixed;
            top: 114px;
            left: 10px;
            width: 260px;
            z-index: 0;
            height: calc(100vh - 190px);
            overflow-y: auto;

        }

        .aie-directory h5 {
            color: #000000c4;
            font-size: 16px;
            text-indent: 4px;
            line-height: 32px;
        }

        .aie-directory a {
            height: 30px;
            font-size: 14px;
            color: #000000a3;
            text-indent: 4px;
            line-height: 30px;
            text-decoration: none;
            width: 100%;
            display: inline-block;
            margin: 0;
            padding: 0;
            white-space: nowrap;
            overflow: hidden;
            -o-text-overflow: ellipsis;
            text-overflow: ellipsis;
        }

        .aie-directory a:hover {
            cursor: pointer;
            background-color: #334d660f;
            border-radius: 4px;
        }

        .aie-title1 {
            font-size: 14px;
            font-weight: 500;
        }

        .aie-title2, .aie-title3, .aie-title4, .aie-title5, .aie-title6 {
            font-size: 12px;
        }

        .aie-directory-content {
            position: sticky;
            top: 108px;
        }

        @@media screen and (max-width: 1280px) {
            .aie-directory {
                display: none;
            }
        }

        @@media screen and (max-width: 1400px) {
            .aie-directory {
                width: 200px;
            }
        }

        .aie-container-title-input{
            max-width: 100%;
            margin: 0;
            min-height: 32px;
            padding: 0;
            outline: none;
            overflow: hidden;
            text-overflow: ellipsis;
            background: none;
            border: none;
            box-shadow: none;
            display: inline-block;
            font-size: 28px;
            width: 100%;
            margin-bottom: 20px;
            margin-top:30px;
            text-align:center;
            resize:none;
        }

        .aie-container-main{
            min-height:800px;
        }

        .editor-quote{
            border: 1px solid #f1f1f1;
            width: 100%;
            padding: 8px;
            border-radius: 4px;
            box-sizing: border-box;
            min-height: 100px;
            outline: none;
            height:180px;
            resize: none;
        }

        .splitter{
            color: #c3bdbd;
            margin: 50px 0;
        }

        .mb-20{
            margin-bottom: 20px;
        }

        .label{
            line-height: 2;
            color: gray;
        }

        .picker-image{
            height: 180px;
            border: 1px dashed #f1f1f1;
            display: flex;
            justify-content: center;
            align-items: center;
            color: gray;
            cursor: pointer;
            position:relative;

            background-position: center;
            background-size: 100% 100%;
        }

        .upload-success>p{
            opacity:0;
        }

        .toolbar{
            width: 100%;
            background: #fff;
            position: fixed;
            bottom: 0;
            background-color: #FFFFFF;
            border-top: 1px solid #D9DADC;
            z-index: 118;
            border-top-width: 0;
            box-shadow: 0 -1px 4px 0 rgba(0, 0, 0, 0.05);
            padding: 16px;
            left: 0;
        }

        .toolbar-wrapper{
                display: flex;
    justify-content: center;
    gap: 15px;
        }

        .upload-btn{
            opacity: 0;
            width: 100%;
            height: 100%;
            position: absolute;
            z-index: 0;
            cursor: pointer;
        }

        .form-select,.row .col-md-6,.form-control{
            box-sizing: border-box;
        }

        .page-header .btn-group{
            vertical-align:inherit;
        }
    </style>
</head>
<body>
    @using Microsoft.AspNetCore.Http.Features
    @using Microsoft.AspNetCore.Localization
    @model Chatty.Blogs.Web.Areas.Admin.ViewModels.NewPostViewModel
    @inject IViewLocalizer L
    @{
        Layout = null;
        var requestCulture = Context.Features.Get<IRequestCultureFeature>();

        var currentCultureName = requestCulture?.RequestCulture.UICulture.Name;
    }

    <!-- Preloader -->
    <div class="preloader">
        <div class="preloader-icon"></div>
    </div>
    <!-- ./ Preloader -->

    <div>
        <div class="page-header ">
            <div class="page-header-wapper d-flex">
                <div class="flex-fill">
                    <img src="~/admin/svg/logo-primary.svg" style="width:28px;" />
                    <a>Chatty Blogs</a>
                </div>
                <div class="flex-fill d-flex justify-content-center">
                    <div>
                        <div class="btn-group" role="group" aria-label="Basic example">
                            <button type="button" class="btn btn-light" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"><i class="ti-layout-accordion-merged"></i>组件</button>
                            <button type="button" class="btn btn-light"><i class="ti-layout-accordion-separated"></i>模板</button>
                            <button type="button" class="btn btn-light"><i class="ti-link"></i>超链接</button>
                            <button type="button" class="btn btn-light"><i class="ti-video-camera"></i>视频</button>
                            <button type="button" class="btn btn-light"><i class="ti-volume"></i>音频</button>
                            <button type="button" class="btn btn-light"><i class="ti-paint-bucket"></i>画图</button>
                        </div>
                    </div>
                </div>
                <div class="flex-fill d-flex justify-content-end">
                    右侧操作栏
                </div>
            </div>
        </div>

       

        <div id="aiEditor" style="padding: 0;margin: 0">
            <div class="aie-container" style="background-color: #f3f4f6">
                <div class="aie-header-panel">
                    <div class="aie-container-header" style="background: #FAFAFA;"></div>
                </div>
                <div class="aie-main">
                    <div class="aie-directory-content">
                        <div class="aie-directory">
                            <h5>@L["Page_Editor_Outline"]</h5>
                            <div id="outline"></div>
                        </div>
                    </div>
                    <div class="aie-container-panel">
                        <div class="aie-container-title">
                            <textarea placeholder="@L["Page_Model_Title"]" class="aie-container-title-input" maxlength="64">@Model.Article.Title</textarea>
                        </div>
                        <div class="aie-container-main">
                            
                        </div>
                        <div>
                            <hr class="splitter" />
                            <div class="mb-20">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label class="label">封面</label>
                                        <div class="picker-image upload @(Model.Article?.CoverUrl!=null?"upload-success":"")" style="background-image: url(@Model.Article?.CoverUrl);">
                                            <input type="file" id="file_cover_image" placeholder="file upload" class="upload-btn" name="file" style="opacity:0;" />
                                            <p class="mb-0">
                                                <i class="ti-plus"></i>选择图片
                                            </p>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                         <label class="label">摘要</label>
                                        <div>
                                            <textarea id="txt_quote" placeholder="文章摘要(未填写将从正文开头截取100字填充)" name="quote" class="editor-quote">@Model.Article?.Quote</textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-20">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="is_public" name="is_public" value="1" checked="@(Model.Article?.IsPublic==1?"checked":"")">
                                    <label class="form-check-label" for="is_public" title="设置公开后，该文章将显示在前台">公开<i class="ti-info-alt"></i></label>
                                </div>
                            </div>

                             <div class="mb-20">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" @(Model.Article?.IsTop==1?"checked":"") type="checkbox" id="is_top" name="is_top" value="1">
                                    <label class="form-check-label" for="is_top" title="设置头条后，该文章将显示在首页头条位置，仅能一篇文章设置为头条">设为头条<i class="ti-info-alt"></i></label>
                                </div>
                            </div>

                            <div class="mb-20">
                                <label class="label">首页版块</label>
                                <div>
                                    <div class="form-check">
                                        <input @(Model.Article?.HomeBlock == "Default" ? "checked" : "") class="form-check-input" value="Default" type="radio" name="Home_Block" id="m_default">
                                        <label class="form-check-label" for="m_default">无</label>
                                    </div>
                                    <div class="form-check">
                                        <input @(Model.Article?.HomeBlock == "Recommand" ? "checked" : "") class="form-check-input" value="Recommand" type="radio" name="Home_Block" id="Recommand">
                                        <label class="form-check-label" for="Recommand">推荐</label>
                                    </div>
                                    <div class="form-check">
                                        <input @(Model.Article?.HomeBlock == "Inspiration" ? "checked" : "") class="form-check-input" value="Inspiration" type="radio" name="Home_Block" id="Inspiration">
                                        <label class="form-check-label" for="Inspiration">灵感</label>
                                    </div>
                                    <div class="form-check">
                                        <input @(Model.Article?.HomeBlock=="Trending"?"checked":"") class="form-check-input" value="Trending" type="radio" name="Home_Block" id="Trending">
                                        <label class="form-check-label" for="Trending">趋势</label>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-20">
                                <label class="label">后台分类</label>
                                <div>
                                    <a data-bs-toggle="modal" class="cursor-pointer" data-bs-target="#modalCategory" >
                                        <span id="category_name" data-id="@Model.SelectedCategory?.RowId">@(Model.SelectedCategory?.Name ?? "未选择")</span>
                                        <i class="ti-angle-right"></i>
                                    </a>
                                </div>
                            </div>

                             <div class="mb-20">
                                <label class="label" title="该分类会展示在博客前台">前台分类<i class="ti-info-alt"></i></label>
                                <div>
                                    <select class="form-select" aria-label="" id="selectFrontCategory">
                                        <option value="">未选择</option>
                                        @foreach (var item in Model.FrontCategories)
                                        {
                                            @if (item.RowId == Model.Article?.FrontCategoryId)
                                            {
                                                <option selected value="@item.RowId">@item.Name</option>
                                            }
                                            else
                                            {
                                                        <option value="@item.RowId">@item.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="mb-20">
                                <label class="label">文章标签</label>
                                <div>
                                    <input type="text" value="@Model.Article?.Tags" class="form-control" name="tags" placeholder="@L["Page_Model_Tags"]">
                                </div>
                            </div>

                            <div class="mb-20">
                                <label class="label">专栏</label>
                                <div>
                                    <select class="form-select" aria-label="Default select example" id="selectSeries">
                                        <option value="">未选择</option>
                                        @foreach (var item in Model.Series)
                                        {
                                            @if (item.RowId == Model.SeriesId)
                                            {
                                                <option selected value="@item.RowId">@item.Title</option>
                                            }
                                            else
                                            {
                                                <option value="@item.RowId">@item.Title</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                            @Html.AntiForgeryToken()

                        </div>

                        <div class="toolbar">
                           <div class="toolbar-wrapper">
                                @if(Model.Article?.Status==1){
                                    <button type="button" id="Page_Action_SaveChange" class="btn btn-primary">@L["Page_Action_SaveChange"]</button>
                                    
                                }
                                else{
                                    <button type="button" id="Page_Action_Save" class="btn btn-primary">@L["Page_Action_SaveAsDraft"]</button>
                                    <button type="button" class="btn btn-light" id="Page_Action_Preview">@L["Page_Action_Preview"]</button>
                                    <button type="button" id="Page_Action_SaveAndPublish" class="btn btn-light">@L["Page_Action_SaveAndPublish"]</button>
                                }
                                
                           </div>
                        </div>
                    </div>
                </div>
                <div class="aie-container-footer"></div>
            </div>
        </div>
    </div>

    <div class="modal  no-border fade" id="modalCategory" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">选择文章分类</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
              <form class="mb-4 form-search">
				<div class="input-group">
					<div class="input-group-prepend">
						<button class="btn" type="button">
							<i class="ti-search"></i>
						</button>
					</div>
					<input type="text" id="searchMenu" class="form-control-search form-control form-control-sm" placeholder="@L["Search something"]">
					
				</div>
			</form>

            <ul id="treeDemo" class="ztree"></ul>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn" data-bs-dismiss="modal">取消</button>
            <button type="button" class="btn btn-primary" id="btnSelectCategoryConfirm">确认选择</button>
          </div>
        </div>
      </div>
    </div>

    <div class="offcanvas offcanvas-end" style="width:600px;" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
        <div class="offcanvas-header">
            <h5 id="offcanvasRightLabel">组件列表</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <div>
                <blockquote>引用模板</blockquote>
            </div>
        </div>

        <div class="offcanvas-footer">
            <div class="mt-2 mb-2 ml-2">
                <button type="button" class="btn" data-bs-dismiss="offcanvas">取消</button>
                <button type="button" class="btn btn-primary">插入模板</button>
            </div>
        </div>
    </div>

    <div class="modal fade no-border" id="cropModal"  tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" style="max-width:800px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">选取封面</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="img-container">
                            <img id="previewImage" src="">
                        </div>

                        <div class="mt-4">
                            <div class="btn-group">
                                <a href="#" class="btn btn-primary action" data-method="zoom" data-option="0.1" title="Zoom In"><i class="ti-zoom-in"></i></a>
                                <a href="#" class="btn btn-primary action" data-method="zoom" data-option="-0.1" title="Zoom Out"><i class="ti-zoom-out"></i></a>
                            </div>

                            <div class="btn-group">
                                <a href="#" class="btn btn-primary action" data-method="rotate" data-option="-45" title="Rotate Left"><i class="ti-back-left"></i></a>
                                <a href="#" class="btn btn-primary action" data-method="rotate" data-option="45" title="Rotate Right"><i class="ti-back-right"></i></a>
                            </div>

                            <div class="btn-group">
                                <a href="#" class="btn btn-primary action" data-method="scaleX" data-option="-1" title="Flip Horizontal"><i class="ti-arrows-horizontal"></i></a>
                                <a href="#" class="btn btn-primary action" data-method="scaleY" data-option="-1" title="Flip Vertical"><i class="ti-arrows-vertical"></i></a>
                            </div>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="docs-preview clearfix">
                            <div class="img-preview preview-lg"></div>
                            <div class="img-preview preview-md"></div>
                            <div class="img-preview preview-sm"></div>
                            <div class="img-preview preview-xs"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="crop">确定</button>
            </div>
        </div>
    </div>
</div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/plugins/ztree/js/jquery.ztree.core.min.js"></script>
    <script src="~/plugins/ztree/js/jquery.ztree.exhide.min.js"></script>
	<script src="~/plugins/ztree/js/fuzzysearch.js"></script>
    <script src="~/plugins/message/coco-message.min.js"></script>
    <script src="~/admin/plugins/cropper/cropper.js"></script>

    <script type="module">
        import { AiEditor } from '/plugins/aieditor/js/index.js';

        // aieditor内置两种语言
        var langs = {
            'zh-CN': 'zh',
            'en-US': 'en'
        };

        function debounce(func, wait) {
            var timeout;

            return function () {
                var context = this;
                var args = arguments;

                clearTimeout(timeout)
                timeout = setTimeout(function () {
                    func.apply(context, args)
                }, wait);
            }
        }

        // 页面对象
        function Page(){
        
            this.$cropModal = $('#cropModal');
            this.$previewImage = $('#previewImage');
            this.cropper = null;
            this.fnCropSuccess = null; // fn

            this.aiEditor = null;
            this.$modalCategory = new bootstrap.Modal(document.getElementById('modalCategory'), {
              keyboard: false
            });

            this.selectedCategory = {
                rowId:'@Model.Article?.CategoryId',
                name: '@Model.Article?.CategoryName'
            };
            this.coverUrl='@Model.Article?.CoverUrl';
            this.rowId = '@Model.RowId';

            this.init();
        }

        Page.prototype = {
            init: function () {
                this.initAiEditor();
                this.bindEvent();
                this.renderTree();
            },
            bindEvent:function(){
                var self=this;

                
                $('[name=is_top]').on('change', function () { 
                    if (this.checked) { 
                        $('[name=is_public]').prop('checked', true);
                    }
                });

                $('[name=is_public]').on('change', function () {
                    if (!this.checked) {
                        $('[name=is_top]').prop('checked', false);
                    }
                });

                // Preview
                $('#Page_Action_Preview').on('click',function(){
                    if(!self.rowId){
                        cocoMessage.error('请先保存为草稿再尝试预览');
                        return;
                    }

                    window.open('/Admin/Blog/Preview?id='+self.rowId);

                });


                $('#btnSelectCategoryConfirm').on('click', function (e) {
                    if(!self.selectedCategory.name){
                        return;
                    }
                    $('#category_name').text(self.selectedCategory.name).attr('data-id',self.selectedCategory.rowId);

                    self.$modalCategory.hide();
                });

                // 上传封面
                $('#file_cover_image').on('change', function (e) { 
                    console.log('e', e.target.files);

                    var file = e.target.files[0];

                    self.loadFile(file, function (url) {
                        self.renderCrop(url)
                        self.fnCropSuccess = function (url) {
                            $('#file_cover_image').parent().css('background-image', 'url(' + url + ')').addClass('upload-success');
                            self.coverUrl = url;
                        }
                    });

                });

                self.$cropModal.on('shown.bs.modal', function () {
                    var previews = document.querySelectorAll('.img-preview');
                    self.cropper = new Cropper(self.$previewImage[0], {
                        aspectRatio: 2/1,
                        preview: '.img-preview',
                        cropmove: function (e) {
                            console.log(e.type, e.detail.action);
                        },
                        crop: function (event) {

                        }
                    });
                }).on('hidden.bs.modal', function () {
                    self.cropper && self.cropper.destroy();
                    self.cropper = null;
                });

                $('#crop').on('click', function () {

                    var canvas;

                    self.$cropModal.modal('hide');

                    if (self.cropper) {

                        canvas = self.cropper.getCroppedCanvas();



                        self.$previewImage.attr('src', canvas.toDataURL());

                        canvas.toBlob(function (blob) {
                            var formData = new FormData();

                            formData.append('formFile', blob, 'avatar.jpg');
                            $.ajax('@Url.Action("Index", "Upload")', {
                                method: 'POST',
                                data: formData,
                                processData: false,
                                contentType: false,

                                xhr: function () {
                                    var xhr = new XMLHttpRequest();

                                    xhr.upload.onprogress = function (e) {
                                        var percent = '0';
                                        var percentage = '0%';

                                        if (e.lengthComputable) {
                                            percent = Math.round((e.loaded / e.total) * 100);
                                            percentage = percent + '%';
                                            console.log('percentage', percentage);
                                        }
                                    };

                                    return xhr;
                                },

                                success: function (res) {
                                    if (res.code === 1) {
                                        self.fnCropSuccess && self.fnCropSuccess(res.data.url);
                                    }
                                },

                                error: function () {

                                },

                                complete: function () {

                                },
                            });
                        });
                    }
                });

                $(".aie-container-title-input").on('input', function () {
                    window.isCloseHint = true;
                });

                // Save Change
                $('#Page_Action_SaveChange').on('click', function () {
                    self.saveChangeData();
                });

                // Cancel
                $('#Page_Action_Cancel').on('click', function () {
                    window.history.back();
                });

                // Save and Publish
                $('#Page_Action_SaveAndPublish').on('click', function () {
                    self.saveData(true);
                });

                // Save Post
                $('#Page_Action_Save').on('click', function () {
                    self.saveData();
                });

                $('.preloader').fadeOut(300);

                // 窗口改变时，重新渲染编辑器布局
                window.addEventListener('resize', debounce(resizeEditor, 500), false);

        

                function resizeEditor() 
                {
                    var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
                    var editor_wapper_height = h - 168;
                    $('.aie-main').css('max-height', editor_wapper_height + 'px');
                }

                resizeEditor();

                window.isCloseHint = false;
            },
            loadFile: function (file, callback) {
                if (URL) {
                    var url = URL.createObjectURL(file);
                    callback && callback(url);
                } else if (FileReader) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var url = reader.result;
                        callback && callback(url);
                    };
                    reader.readAsDataURL(file);
                }
            },
            renderCrop: function (url) {
                this.$previewImage.attr('src', url);
                this.$cropModal.modal('show');
            },
            getFormData:function(){
                var self=this;

                var title = $(".aie-container-title-input").val();
                var content = self.aiEditor.getHtml();
                var isPublic = $('#is_public').prop('checked') ? 1 : 0;
                var quote = $('#txt_quote').val();
                var isTop = $('#is_top').prop('checked') ? 1 : 0;
                var homeBlock = $('[name=Home_Block]:checked').val();
                var categoryId = $('#category_name').data('id');
                var tags = $('[name=tags]').val();
                var token = $('[name=__RequestVerificationToken]').val();
                var seriesId = $('#selectSeries').val();
                var frontCategoryId= $('#selectFrontCategory').val();

                var params = {
                    rowId: self.rowId,
                    title: title,
                    content: content,
                    isPublic: isPublic,
                    homeBlock: homeBlock,
                    isTop: isTop,
                    quote: quote,
                    seriesId: seriesId,
                    outline: JSON.stringify(self.aiEditor.getOutline()),
                    categoryId: categoryId,
                    coverUrl: self.coverUrl,
                    tags: tags,
                    frontCategoryId:frontCategoryId,
                    __RequestVerificationToken: token
                };

                return params;
            },
            saveData:function(status){
                var self=this;

                var params = self.getFormData();

                if (!params.title) {
                    cocoMessage.error('请输入标题');
                    return;
                }

                params.status = status ? 1 : 0;

                if(status==true){
                    if (!params.coverUrl) {
                        cocoMessage.error('请上传封面后再尝试发表');
                        return;
                    }

                    if(!params.quote){
                        params.quote = self.aiEditor.getText().substring(0, 60).trim();
                    }

                }


                window.isCloseHint = false;

                $.post("@Url.Action("Save", "Blog")", params, function (res) {
                    if (res.code === 1) {
                        cocoMessage.success('保存成功');

                        if(!self.rowId || status==true){
                            setTimeout(function () { window.location.replace("@Url.Action("NewPost","Blog",new { area="Admin"})/" + res.data.rowId); }, 500);
                        }

                        self.rowId = res.data.rowId;
                    } else {
                        cocoMessage.error(res.msg);
                    }
                }).fail(function (err) { 

                    if (err.status===400){
                        var res = err.responseJSON;
                        cocoMessage.error(res.msg +':'+res.details);
                    }else{
                        cocoMessage.error('保存失败');
                        console.error('err', err.responseText);
                    }

                });
            },
            saveChangeData: function () {
                var self = this;

                var params = self.getFormData();

                if (!params.title) {
                    cocoMessage.error('请输入标题');
                    return;
                }

                $.post("@Url.Action("SaveChange", "Blog")", params, function (res) {
                    if (res.code === 1) {
                        cocoMessage.success('保存成功');
                    } else {
                        cocoMessage.error(res.errorMsg);
                    }
                }).fail(function (err) {

                    if (err.status === 400) {
                        var res = err.responseJSON;
                        cocoMessage.error(res.msg + ':' + res.details);
                    } else {
                        cocoMessage.error('保存失败');
                        console.error('err', err.responseText);
                    }

                });
            },
            initAiEditor: function () {
                var self=this;

                // 更新目录内容
                function updateOutLine(editor) {

                    const outlineContainer = document.querySelector("#outline");
                    while (outlineContainer?.firstChild) {
                        outlineContainer.removeChild(outlineContainer.firstChild)
                    }

                    const outlines = editor.getOutline();
                    for (let outline of outlines) {
                        const child = document.createElement("div")
                        child.classList.add(`aie-title${outline.level}`)
                        child.style.marginLeft = `${14 * (outline.level - 1)}px`
                        child.innerHTML = `<a href="#${outline.id}">${outline.text}</a>`
                        child.addEventListener("click", (e) => {
                            e.preventDefault();
                            const el = editor.innerEditor.view.dom.querySelector(`#${outline.id}`);
                            el.scrollIntoView({ behavior: "smooth", block: "center", inline: "nearest" });
                            setTimeout(() => {
                                editor.focusPos(outline.pos + outline.size - 1)
                            }, 1000)
                        })
                        outlineContainer?.appendChild(child)
                    }
                }

                this.aiEditor = new AiEditor({
                    element: "#aiEditor",
                    placeholder: "@L["Page_Model_Content"]...",
                    contentRetention: false,
                    content: '',
                    lang: langs['@currentCultureName'],
                    ai: {
                        models: {
                            spark: {
                                appId: "3f494071",
                                apiKey: "ce2c5b934676d02ee7033d3521627e6f",
                                apiSecret: "NGM2N2FjNzhhNjA5YjZhODg1ZmI2NzIx",
                                protocol: "wss", //或者 wss
                                version: "v3.5", //或者其他
                            }
                        }
                    },
                    onMentionQuery: (query) => {
                        return [
                            'Michael Yang', 'Jean Zhou', 'Tom Cruise', 'Madonna', 'Jerry Hall', 'Joan Collins', 'Winona Ryder'
                            , 'Christina Applegate', 'Alyssa Milano', 'Molly Ringwald', 'Ally Sheedy', 'Debbie Harry', 'Olivia Newton-John'
                            , 'Elton John', 'Michael J. Fox', 'Axl Rose', 'Emilio Estevez', 'Ralph Macchio', 'Rob Lowe', 'Jennifer Grey'
                            , 'Mickey Rourke', 'John Cusack', 'Matthew Broderick', 'Justine Bateman', 'Lisa Bonet',
                        ].filter(item => item.toLowerCase().startsWith(query.toLowerCase())).slice(0, 5)
                    },

                    onCreated: (editor) => {
                        updateOutLine(editor)

                        self.aiEditor.setContent(@Html.Raw(Json.Serialize(Model.Article?.Content)));

                    },
                    onChange: (editor) => {
                        updateOutLine(editor);

                        window.isCloseHint = true;
                    },
                });

                // setTimeout(function(){
                //     self.aiEditor.focus().insert('<div class="yu"><h1>动态插入内容</h1><blockquote>引用内容</blockquote><div class="tyu">444</div><p class="rr">555</p></div>');
                // },1500);
            },
            renderTree:function () {
				var self=this;

				var curMenu = null, zTree_Menu = null;
				var setting = {
					view: {
						showLine: false,
						showIcon: false,
						selectedMulti: false,
						dblClickExpand: false,
						addDiyDom: addDiyDom
					},
					data: {
						simpleData: {
							enable: true,
							idKey:'rowId',
								pIdKey:'parentId',
							rootPId:null
						}
					},
					callback: {
						beforeClick: beforeClick,
						onClick: zTreeOnClick
					}
				};

				var zNodes = @Html.Raw(Json.Serialize(Model.BackCategories));

				function addDiyDom(treeId, treeNode) {
					var spaceWidth = 5;
					var switchObj = $("#" + treeNode.tId + "_switch"),
						icoObj = $("#" + treeNode.tId + "_ico");
					switchObj.remove();
					icoObj.before(switchObj);

					if (treeNode.level > 1) {
						var spaceStr = "<span style='display: inline-block;width:" + (spaceWidth * treeNode.level) + "px'></span>";
						switchObj.before(spaceStr);
					}
				}

				function zTreeOnClick(event, treeId, treeNode) {
					
                    self.selectedCategory = {
                        rowId:treeNode.rowId,
                        name:treeNode.oldname || treeNode.name
                    };

				}

				function beforeClick(treeId, treeNode) {
					// if (treeNode.level == 0) {
					// 	var zTree = $.fn.zTree.getZTreeObj("treeDemo");
					// 	zTree.expandNode(treeNode);
					// 	return false;
					// }
					return true;
				}

				$(document).ready(function () {
					var treeObj = $("#treeDemo");
					$.fn.zTree.init(treeObj, setting, zNodes);
					zTree_Menu = $.fn.zTree.getZTreeObj("treeDemo");
					// curMenu = zTree_Menu.getNodes()[0].children[0].children[0];
					// zTree_Menu.selectNode(curMenu);

					treeObj.hover(function () {
						if (!treeObj.hasClass("showIcon")) {
							treeObj.addClass("showIcon");
						}
					}, function () {
						treeObj.removeClass("showIcon");
					});

					fuzzySearch('treeDemo', '#searchMenu', null, true); //初始化模糊搜索方法
				});
			}
        };

        new Page(); // 程序入口 

        //初始化关闭
        // window.addEventListener("beforeunload", function (e) {
        //     if (window.isCloseHint) {
        //         var confirmationMessage = "要记得保存！你确定要离开我吗？";
        //         (e || window.event).returnValue = confirmationMessage; // 兼容 Gecko + IE
        //         return confirmationMessage; // 兼容 Gecko + Webkit, Safari, Chrome
        //     }
        // });


    </script>
</body>
</html>